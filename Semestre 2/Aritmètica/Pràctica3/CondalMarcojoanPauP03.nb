Pràctica 3 - joan Pau condal Marco
Exercici 1:
In[1]:= ?Outer
Outer[f,Subscript[list, 1],Subscript[list, 2],…] gives the generalized outer product of the Subscript[list, i], forming all possible combinations of the lowest-level elements in each of them, and feeding them as arguments to f. 
Outer[f,Subscript[list, 1],Subscript[list, 2],…,n] treats as separate elements only sublists at level n in the Subscript[list, i]. 
Outer[f,Subscript[list, 1],Subscript[list, 2],…,Subscript[n, 1],Subscript[n, 2],…] treats as separate elements only sublists at level Subscript[n, i] in the corresponding Subscript[list, i].  >>
In[2]:= ?Count
Count[list,pattern] gives the number of elements in list that match pattern. 
Count[expr,pattern,levelspec] gives the total number of subexpressions matching pattern that appear at the levels in expr specified by levelspec. 
Count[pattern] represents an operator form of Count that can be applied to an expression. >>
In[3]:= ?Range
Range[Subscript[i, max]] generates the list {1,2,…,Subscript[i, max]}. 
Range[Subscript[i, min],Subscript[i, max]] generates the list {Subscript[i, min],…,Subscript[i, max]}. 
Range[Subscript[i, min],Subscript[i, max],di] uses step di. >>
In[4]:= ?Select
Select[list,crit] picks out all elements Subscript[e, i] of list for which crit[Subscript[e, i]] is True. 
Select[list,crit,n] picks out the first n elements for which crit[Subscript[e, i]] is True. 
Select[crit] represents an operator form of Select that can be applied to an expression.  >>
?#
# represents the first argument supplied to a pure function. 
#n represents the n^th argument. 
#name represents the value associated with key "name" in an association in the first argument.  >>
In[6]:= ?&
Function[body] or body& is a pure function. The formal parameters are # (or #1), #2, etc. 
Function[x,body] is a pure function with a single formal parameter x. 
Function[{Subscript[x, 1],Subscript[x, 2],…},body] is a pure function with a list of formal parameters.  >>
Posa't exemples per a comprendre'n el significat:
In[7]:= Outer[f, {a,b},{1,2,3}]
Out[7]= {{f[a,1],f[a,2],f[a,3]},{f[b,1],f[b,2],f[b,3]}}
In[8]:= Count[{a,b,c,d,a,b,c,hola},a]
Out[8]= 2
In[9]:= Range[23]
Out[9]= {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23}
In[10]:= Select[{a1,4,2,7,6a}, EvenQ]
Out[10]= {4,2}
In[11]:= Select[{a1,4,2,7,6a}, #>2&]
Out[11]= {4,7}
Exercici 2 :
Explica l'exemple següent:
In[13]:= Outer[GCD,{3},{6,7,9}]
Out[13]= {{3,1,3}}
El que fa la funció anterior és calcular el mínim comú múltiple (GCD) de 3 amb cada element del conjunt {6,7,9}
In[14]:= mcdamb[n0_]:=Module[ {n = n0},
Outer[GCD,{n},Range[n]]
]
In[15]:= mcdamb[10]
Out[15]= {{1,2,1,2,5,2,1,2,1,10}}
Exercici 3 :
In[20]:= phi[n0_]:=Module[{n = n0},
t = Flatten[mcdamb[n]];
Count [t,1]
]
In[21]:= phi[100]
Out[21]= 40
Exercici 4 :
In[22]:= phi[500]
Out[22]= 200
In[23]:= phi[10000]
Out[23]= 4000
In[24]:= phi[10^20]
During evaluation of In[24]:= Range::range: Range specification in Range[100000000000000000000] does not have appropriate bounds.
During evaluation of In[24]:= Outer::heads: Heads Range and List at positions 3 and 2 are expected to be the same.
Out[24]= 0